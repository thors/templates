(defun fizzbuzz(n)
  (interactive "p")
  (let ((i 0)
	(o  "")
	(result ""))
    (while (> n i)
      (setq i (+ i 1))
      (setq o "")
      (if (eq (mod i 3) 0)
	  (setq o (concat o "Fizz")))
      (if (eq (mod i 5) 0)
	  (setq o (concat o "Buzz")))
      (if (eq (length o) 0)
	  (setq o (number-to-string i)))
      (setq result (concat result (concat " " o))))
    (message result)))

(define-abbrev-table 'latex-abbrev '(
  ("Ä" "{\\\"A}")
  ("ä" "{\\\"a}")
  ("ö" "{\\\"o}")
  ("Ö" "{\\\"O}")
  ("ü" "{\\\"u}")
  ("Ü" "{\\\"U}")
  ("ß" "{\\ss}")
))

(let ((abbrev-file-name "~/.emacs.d/latex_abbrevs.el"))
  (message abbrev-file-name)
  (write-abbrev-file)
)

(setq-default abbrev-mode t)
(let ((abbrev-file-name "~/.emacs.d/latex_abbrevs.el"))
  (message abbrev-file-name)
  (read-abbrev-file)
)

(define-global-abbrev "ä" "ä")
(setq local-abbrev-table nil)

